{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\googo\\\\.vscode\\\\GravityTile\\\\tile-monitor\\\\src\\\\components\\\\TileGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TileGrid = () => {\n  _s();\n  const [tileHistory, setTileHistory] = useState([]);\n  const [activeTile, setActiveTile] = useState(null);\n  const [activePeriods, setActivePeriods] = useState([]);\n  const [currentSum, setCurrentSum] = useState(0);\n  console.log(currentSum);\n  //const [currentVolts, setCurrentVolts] = useState(0);\n\n  // const fs = require('fs');\n  // // Function to read the first line of the CSV and return it as an integer\n  // function readFirstLine() {\n  //   fs.readFile('stats.csv', 'utf8', (err, data) => {\n  //     if (err) {\n  //       console.error('Error reading the file:', err);\n  //       return;\n  //     }\n\n  //     // Split the content by lines and grab the first line\n  //     const lines = data.split('\\n');\n  //     const firstLine = lines[0];\n\n  //     // Convert the first line to an integer\n  //     const currentVal = parseInt(firstLine.trim(), 10);\n\n  //     return currentVal;\n  //   });\n  // }\n\n  const fetchCurrentSum = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/current-sum');\n      const data = await response.json();\n      if (data.currentSum !== undefined) {\n        setCurrentSum(data.currentSum / 1000); // âœ… Update state with fetched value\n      } else {\n        console.error(\"Invalid response structure:\", data);\n      }\n    } catch (error) {\n      console.error('Error fetching current sum:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCurrentSum();\n    const interval = setInterval(fetchCurrentSum, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const fetchTileHistory = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/tile-history');\n      const data = await response.json();\n      if (data.length > 0) {\n        setTileHistory(data);\n        setActiveTile(data[data.length - 1].tile);\n        processActivePeriods(data);\n      } else {\n        setTileHistory([]);\n        setActiveTile(null);\n      }\n    } catch (error) {\n      console.error('Error fetching tile history:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTileHistory();\n    const interval = setInterval(fetchTileHistory, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  const processActivePeriods = data => {\n    if (data.length === 0) {\n      setActivePeriods([]);\n      return;\n    }\n    let periods = [];\n    let previousTimestamp = new Date(data[0].timestamp);\n    let previousTile = data[0].tile;\n    for (let i = 1; i < data.length; i++) {\n      const currentTimestamp = new Date(data[i].timestamp);\n      const currentTile = data[i].tile;\n      periods.push({\n        tile: previousTile,\n        start: previousTimestamp,\n        end: currentTimestamp\n      });\n      previousTile = currentTile;\n      previousTimestamp = currentTimestamp;\n    }\n    periods.push({\n      tile: previousTile,\n      start: previousTimestamp,\n      end: new Date()\n    });\n    setActivePeriods(periods);\n  };\n  const handleTileClick = async tileNumber => {\n    try {\n      setActiveTile(tileNumber);\n      console.log(currentSum);\n      const response = await fetch('http://localhost:3001/api/log-tile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tile: tileNumber\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to log tile click');\n      }\n      console.log(`Tile ${tileNumber} clicked and logged.`);\n      fetchTileHistory();\n    } catch (error) {\n      console.error('Error clicking tile:', error);\n    }\n  };\n  const chartData = {\n    labels: activePeriods.map(entry => `${entry.start.toLocaleTimeString()} - ${entry.end.toLocaleTimeString()}`),\n    datasets: [{\n      label: `Tile Activation Durations`,\n      data: activePeriods.map(entry => entry.tile),\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      stepped: true\n    }]\n  };\n\n  // Hexagon layout with proper positioning\n  const hexagonLayout = [[null, null, 1, null, null], [null, 2, 3, 4, null], [null, 5, 6, 7, null]];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container mb-12\",\n      children: hexagonLayout.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hex-row\",\n        style: {\n          marginLeft: rowIndex % 2 === 1 ? '25px' : '0'\n        },\n        children: row.map((hex, colIndex) => hex ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTileClick(hex),\n          className: `hex-button ${activeTile === hex ? 'hex-button-active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hex-content\",\n            children: hex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this)\n        }, hex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-spacer\"\n        }, `empty-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2 text-center\",\n        children: \"Tile Activation Timeline (Past 12 Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), activePeriods.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Tile Number\"\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: \"No activations in the past 12 hours.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2 text-center\",\n        children: \"Total Energy Generated (Past 12 Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-8 bg-gray-200 rounded-full overflow-hidden mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-green-500 transition-all duration-500\",\n          style: {\n            width: `${Math.min(currentSum / 10, 100)}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-lg font-semibold text-gray-700\",\n        children: [currentSum.toFixed(2), \"V stored\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(TileGrid, \"CqH447mYpk+2pgkMIwmcobg4FOM=\");\n_c = TileGrid;\nexport default TileGrid;\nvar _c;\n$RefreshReg$(_c, \"TileGrid\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","TileGrid","_s","tileHistory","setTileHistory","activeTile","setActiveTile","activePeriods","setActivePeriods","currentSum","setCurrentSum","console","log","fetchCurrentSum","response","fetch","data","json","undefined","error","interval","setInterval","clearInterval","fetchTileHistory","length","tile","processActivePeriods","periods","previousTimestamp","Date","timestamp","previousTile","i","currentTimestamp","currentTile","push","start","end","handleTileClick","tileNumber","method","headers","body","JSON","stringify","ok","Error","chartData","labels","map","entry","toLocaleTimeString","datasets","label","borderColor","backgroundColor","stepped","hexagonLayout","className","children","row","rowIndex","style","marginLeft","hex","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","y","beginAtZero","title","display","text","width","Math","min","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/googo/.vscode/GravityTile/tile-monitor/src/components/TileGrid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nconst TileGrid = () => {\r\n  const [tileHistory, setTileHistory] = useState([]);\r\n  const [activeTile, setActiveTile] = useState(null);\r\n  const [activePeriods, setActivePeriods] = useState([]);\r\n  const [currentSum, setCurrentSum] = useState(0);\r\n\r\n  console.log(currentSum)\r\n  //const [currentVolts, setCurrentVolts] = useState(0);\r\n\r\n  // const fs = require('fs');\r\n  // // Function to read the first line of the CSV and return it as an integer\r\n  // function readFirstLine() {\r\n  //   fs.readFile('stats.csv', 'utf8', (err, data) => {\r\n  //     if (err) {\r\n  //       console.error('Error reading the file:', err);\r\n  //       return;\r\n  //     }\r\n\r\n  //     // Split the content by lines and grab the first line\r\n  //     const lines = data.split('\\n');\r\n  //     const firstLine = lines[0];\r\n\r\n  //     // Convert the first line to an integer\r\n  //     const currentVal = parseInt(firstLine.trim(), 10);\r\n\r\n  //     return currentVal;\r\n  //   });\r\n  // }\r\n\r\n  const fetchCurrentSum = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/current-sum');\r\n      const data = await response.json();\r\n      \r\n      if (data.currentSum !== undefined) {\r\n        setCurrentSum(data.currentSum/1000);  // âœ… Update state with fetched value\r\n      } else {\r\n        console.error(\"Invalid response structure:\", data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching current sum:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchCurrentSum();\r\n    const interval = setInterval(fetchCurrentSum, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchTileHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/tile-history');\r\n      const data = await response.json();\r\n\r\n      if (data.length > 0) {\r\n        setTileHistory(data);\r\n        setActiveTile(data[data.length - 1].tile);\r\n        processActivePeriods(data);\r\n      } else {\r\n        setTileHistory([]);\r\n        setActiveTile(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching tile history:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTileHistory();\r\n    const interval = setInterval(fetchTileHistory, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const processActivePeriods = (data) => {\r\n    if (data.length === 0) {\r\n      setActivePeriods([]);\r\n      return;\r\n    }\r\n\r\n    let periods = [];\r\n    let previousTimestamp = new Date(data[0].timestamp);\r\n    let previousTile = data[0].tile;\r\n\r\n    for (let i = 1; i < data.length; i++) {\r\n      const currentTimestamp = new Date(data[i].timestamp);\r\n      const currentTile = data[i].tile;\r\n\r\n      periods.push({\r\n        tile: previousTile,\r\n        start: previousTimestamp,\r\n        end: currentTimestamp,\r\n      });\r\n\r\n      previousTile = currentTile;\r\n      previousTimestamp = currentTimestamp;\r\n    }\r\n\r\n    periods.push({\r\n      tile: previousTile,\r\n      start: previousTimestamp,\r\n      end: new Date(),\r\n    });\r\n\r\n    setActivePeriods(periods);\r\n  };\r\n\r\n  const handleTileClick = async (tileNumber) => {\r\n    try {\r\n      setActiveTile(tileNumber);\r\n      console.log(currentSum)\r\n      const response = await fetch('http://localhost:3001/api/log-tile', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ tile: tileNumber }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to log tile click');\r\n      }\r\n\r\n      console.log(`Tile ${tileNumber} clicked and logged.`);\r\n      fetchTileHistory();\r\n    } catch (error) {\r\n      console.error('Error clicking tile:', error);\r\n    }\r\n  };\r\n\r\n  const chartData = {\r\n    labels: activePeriods.map(entry => `${entry.start.toLocaleTimeString()} - ${entry.end.toLocaleTimeString()}`),\r\n    datasets: [\r\n      {\r\n        label: `Tile Activation Durations`,\r\n        data: activePeriods.map(entry => entry.tile),\r\n        borderColor: 'blue',\r\n        backgroundColor: 'rgba(0, 0, 255, 0.2)',\r\n        stepped: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  \r\n  // Hexagon layout with proper positioning\r\n  const hexagonLayout = [\r\n    [null, null, 1, null, null],\r\n    [null, 2, 3, 4, null],\r\n    [null, 5, 6, 7, null]\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-8\">\r\n      {/* Hexagonal Grid with improved centering */}\r\n      <div className=\"grid-container mb-12\">\r\n        {hexagonLayout.map((row, rowIndex) => (\r\n          <div \r\n            key={rowIndex} \r\n            className=\"hex-row\"\r\n            style={{\r\n              marginLeft: rowIndex % 2 === 1 ? '25px' : '0'\r\n            }}\r\n          >\r\n            {row.map((hex, colIndex) => \r\n              hex ? (\r\n                <button\r\n                  key={hex}\r\n                  onClick={() => handleTileClick(hex)}\r\n                  className={`hex-button ${activeTile === hex ? 'hex-button-active' : ''}`}\r\n                >\r\n                  <div className=\"hex-content\">{hex}</div>\r\n                </button>\r\n              ) : (\r\n                <div key={`empty-${colIndex}`} className=\"hex-spacer\" />\r\n              )\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Timeline Chart */}\r\n      <div className=\"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-lg font-semibold mb-2 text-center\">\r\n          Tile Activation Timeline (Past 12 Hours)\r\n        </h2>\r\n        {activePeriods.length > 0 ? (\r\n          <Line\r\n            data={chartData}\r\n            options={{\r\n              scales: {\r\n                y: { beginAtZero: true, title: { display: true, text: \"Tile Number\" } },\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p className=\"text-gray-500 text-center\">No activations in the past 12 hours.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Energy Bar */}\r\n      <div className=\"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg mt-6\">\r\n        <h2 className=\"text-lg font-semibold mb-2 text-center\">\r\n          Total Energy Generated (Past 12 Hours)\r\n        </h2>\r\n        <div className=\"relative h-8 bg-gray-200 rounded-full overflow-hidden mb-6\">\r\n          <div\r\n            className=\"h-full bg-green-500 transition-all duration-500\"\r\n            style={{ width: `${Math.min(currentSum / 10, 100)}%` }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"text-center text-lg font-semibold text-gray-700\">\r\n          {currentSum.toFixed(2)}V stored\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TileGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE/Ce,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;MACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACP,UAAU,KAAKS,SAAS,EAAE;QACjCR,aAAa,CAACM,IAAI,CAACP,UAAU,GAAC,IAAI,CAAC,CAAC,CAAE;MACxC,CAAC,MAAM;QACLE,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEH,IAAI,CAAC;MACpD;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EACDtB,SAAS,CAAC,MAAM;IACdgB,eAAe,CAAC,CAAC;IACjB,MAAMO,QAAQ,GAAGC,WAAW,CAACR,eAAe,EAAE,IAAI,CAAC;IACnD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACQ,MAAM,GAAG,CAAC,EAAE;QACnBpB,cAAc,CAACY,IAAI,CAAC;QACpBV,aAAa,CAACU,IAAI,CAACA,IAAI,CAACQ,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC;QACzCC,oBAAoB,CAACV,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLZ,cAAc,CAAC,EAAE,CAAC;QAClBE,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd0B,gBAAgB,CAAC,CAAC;IAClB,MAAMH,QAAQ,GAAGC,WAAW,CAACE,gBAAgB,EAAE,IAAI,CAAC;IACpD,OAAO,MAAMD,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,oBAAoB,GAAIV,IAAI,IAAK;IACrC,IAAIA,IAAI,CAACQ,MAAM,KAAK,CAAC,EAAE;MACrBhB,gBAAgB,CAAC,EAAE,CAAC;MACpB;IACF;IAEA,IAAImB,OAAO,GAAG,EAAE;IAChB,IAAIC,iBAAiB,GAAG,IAAIC,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC,CAACc,SAAS,CAAC;IACnD,IAAIC,YAAY,GAAGf,IAAI,CAAC,CAAC,CAAC,CAACS,IAAI;IAE/B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,IAAI,CAACQ,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACpC,MAAMC,gBAAgB,GAAG,IAAIJ,IAAI,CAACb,IAAI,CAACgB,CAAC,CAAC,CAACF,SAAS,CAAC;MACpD,MAAMI,WAAW,GAAGlB,IAAI,CAACgB,CAAC,CAAC,CAACP,IAAI;MAEhCE,OAAO,CAACQ,IAAI,CAAC;QACXV,IAAI,EAAEM,YAAY;QAClBK,KAAK,EAAER,iBAAiB;QACxBS,GAAG,EAAEJ;MACP,CAAC,CAAC;MAEFF,YAAY,GAAGG,WAAW;MAC1BN,iBAAiB,GAAGK,gBAAgB;IACtC;IAEAN,OAAO,CAACQ,IAAI,CAAC;MACXV,IAAI,EAAEM,YAAY;MAClBK,KAAK,EAAER,iBAAiB;MACxBS,GAAG,EAAE,IAAIR,IAAI,CAAC;IAChB,CAAC,CAAC;IAEFrB,gBAAgB,CAACmB,OAAO,CAAC;EAC3B,CAAC;EAED,MAAMW,eAAe,GAAG,MAAOC,UAAU,IAAK;IAC5C,IAAI;MACFjC,aAAa,CAACiC,UAAU,CAAC;MACzB5B,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEyB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB,IAAI,EAAEc;QAAW,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACzB,QAAQ,CAAC+B,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEAnC,OAAO,CAACC,GAAG,CAAC,QAAQ2B,UAAU,sBAAsB,CAAC;MACrDhB,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAM4B,SAAS,GAAG;IAChBC,MAAM,EAAEzC,aAAa,CAAC0C,GAAG,CAACC,KAAK,IAAI,GAAGA,KAAK,CAACd,KAAK,CAACe,kBAAkB,CAAC,CAAC,MAAMD,KAAK,CAACb,GAAG,CAACc,kBAAkB,CAAC,CAAC,EAAE,CAAC;IAC7GC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,2BAA2B;MAClCrC,IAAI,EAAET,aAAa,CAAC0C,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACzB,IAAI,CAAC;MAC5C6B,WAAW,EAAE,MAAM;MACnBC,eAAe,EAAE,sBAAsB;MACvCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;;EAGD;EACA,MAAMC,aAAa,GAAG,CACpB,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3B,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EACrB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CACtB;EAED,oBACEzD,OAAA;IAAK0D,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBAErF3D,OAAA;MAAK0D,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAClCF,aAAa,CAACR,GAAG,CAAC,CAACW,GAAG,EAAEC,QAAQ,kBAC/B7D,OAAA;QAEE0D,SAAS,EAAC,SAAS;QACnBI,KAAK,EAAE;UACLC,UAAU,EAAEF,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG;QAC5C,CAAE;QAAAF,QAAA,EAEDC,GAAG,CAACX,GAAG,CAAC,CAACe,GAAG,EAAEC,QAAQ,KACrBD,GAAG,gBACDhE,OAAA;UAEEkE,OAAO,EAAEA,CAAA,KAAM5B,eAAe,CAAC0B,GAAG,CAAE;UACpCN,SAAS,EAAE,cAAcrD,UAAU,KAAK2D,GAAG,GAAG,mBAAmB,GAAG,EAAE,EAAG;UAAAL,QAAA,eAEzE3D,OAAA;YAAK0D,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEK;UAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,GAJnCN,GAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKF,CAAC,gBAETtE,OAAA;UAA+B0D,SAAS,EAAC;QAAY,GAA3C,SAASO,QAAQ,EAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0B,CAE3D;MAAC,GAlBIT,QAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNtE,OAAA;MAAK0D,SAAS,EAAC,oDAAoD;MAAAC,QAAA,gBACjE3D,OAAA;QAAI0D,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAAC;MAEvD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACJ/D,aAAa,CAACiB,MAAM,GAAG,CAAC,gBACvBxB,OAAA,CAACF,IAAI;QACHkB,IAAI,EAAE+B,SAAU;QAChBwB,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cAAEC,WAAW,EAAE,IAAI;cAAEC,KAAK,EAAE;gBAAEC,OAAO,EAAE,IAAI;gBAAEC,IAAI,EAAE;cAAc;YAAE;UACxE;QACF;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEFtE,OAAA;QAAG0D,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAoC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACjF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNtE,OAAA;MAAK0D,SAAS,EAAC,yDAAyD;MAAAC,QAAA,gBACtE3D,OAAA;QAAI0D,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAAC;MAEvD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLtE,OAAA;QAAK0D,SAAS,EAAC,4DAA4D;QAAAC,QAAA,eACzE3D,OAAA;UACE0D,SAAS,EAAC,iDAAiD;UAC3DI,KAAK,EAAE;YAAEgB,KAAK,EAAE,GAAGC,IAAI,CAACC,GAAG,CAACvE,UAAU,GAAG,EAAE,EAAE,GAAG,CAAC;UAAI;QAAE;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENtE,OAAA;QAAK0D,SAAS,EAAC,iDAAiD;QAAAC,QAAA,GAC7DlD,UAAU,CAACwE,OAAO,CAAC,CAAC,CAAC,EAAC,UACzB;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpE,EAAA,CAxNID,QAAQ;AAAAiF,EAAA,GAARjF,QAAQ;AA0Nd,eAAeA,QAAQ;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}