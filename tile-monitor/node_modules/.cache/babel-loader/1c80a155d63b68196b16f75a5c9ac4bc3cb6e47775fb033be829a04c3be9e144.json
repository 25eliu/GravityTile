{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\googo\\\\.vscode\\\\GravityTile\\\\tile-monitor\\\\src\\\\components\\\\TileGrid.jsx\",\n  _s = $RefreshSig$();\n// src/components/TileGrid.jsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TileGrid = () => {\n  _s();\n  const [activeTiles, setActiveTiles] = useState(new Set());\n  const fetchActiveTiles = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/tiles');\n      const data = await response.json();\n      setActiveTiles(new Set(data));\n    } catch (error) {\n      console.error('Error fetching tiles:', error);\n    }\n  };\n  useEffect(() => {\n    fetchActiveTiles();\n    const interval = setInterval(fetchActiveTiles, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"Tile Activity Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-10 gap-2\",\n      children: Array.from({\n        length: 100\n      }, (_, i) => i + 1).map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n              aspect-square\n              flex\n              items-center\n              justify-center\n              text-sm\n              font-medium\n              border\n              rounded\n              transition-colors\n              duration-300\n              ${activeTiles.has(number) ? 'bg-blue-500 text-white' : 'bg-white hover:bg-gray-100'}\n            `,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TileGrid, \"hTWoAh0Z0femLBvTJeJdNMeilao=\");\n_c = TileGrid;\nexport default TileGrid;\nvar _c;\n$RefreshReg$(_c, \"TileGrid\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TileGrid","_s","activeTiles","setActiveTiles","Set","fetchActiveTiles","response","fetch","data","json","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","i","map","number","has","_c","$RefreshReg$"],"sources":["C:/Users/googo/.vscode/GravityTile/tile-monitor/src/components/TileGrid.jsx"],"sourcesContent":["// src/components/TileGrid.jsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst TileGrid = () => {\r\n  const [activeTiles, setActiveTiles] = useState(new Set());\r\n\r\n  const fetchActiveTiles = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/tiles');\r\n      const data = await response.json();\r\n      setActiveTiles(new Set(data));\r\n    } catch (error) {\r\n      console.error('Error fetching tiles:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchActiveTiles();\r\n    const interval = setInterval(fetchActiveTiles, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\">\r\n      <h1 className=\"text-2xl font-bold mb-4 text-gray-800\">Tile Activity Monitor</h1>\r\n      <div className=\"grid grid-cols-10 gap-2\">\r\n        {Array.from({ length: 100 }, (_, i) => i + 1).map(number => (\r\n          <div\r\n            key={number}\r\n            className={`\r\n              aspect-square\r\n              flex\r\n              items-center\r\n              justify-center\r\n              text-sm\r\n              font-medium\r\n              border\r\n              rounded\r\n              transition-colors\r\n              duration-300\r\n              ${activeTiles.has(number) \r\n                ? 'bg-blue-500 text-white' \r\n                : 'bg-white hover:bg-gray-100'\r\n              }\r\n            `}\r\n          >\r\n            {number}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TileGrid;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,GAAG,CAAC,CAAC,CAAC;EAEzD,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,cAAc,CAAC,IAAIC,GAAG,CAACI,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdQ,gBAAgB,CAAC,CAAC;IAClB,MAAMO,QAAQ,GAAGC,WAAW,CAACR,gBAAgB,EAAE,IAAI,CAAC;IACpD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKgB,SAAS,EAAC,4DAA4D;IAAAC,QAAA,gBACzEjB,OAAA;MAAIgB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChFrB,OAAA;MAAKgB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCK,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAI,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACC,GAAG,CAACC,MAAM,iBACtD5B,OAAA;QAEEgB,SAAS,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBb,WAAW,CAAC0B,GAAG,CAACD,MAAM,CAAC,GACrB,wBAAwB,GACxB,4BAA4B;AAC9C,aACc;QAAAX,QAAA,EAEDW;MAAM,GAlBFA,MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjDID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}