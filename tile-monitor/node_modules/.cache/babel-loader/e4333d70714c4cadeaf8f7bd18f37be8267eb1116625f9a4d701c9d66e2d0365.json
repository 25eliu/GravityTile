{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/projects/GravityTile/tile-monitor/src/components/TileGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TileGrid = () => {\n  _s();\n  const [tileHistory, setTileHistory] = useState([]);\n  const [activeTile, setActiveTile] = useState(null);\n  const [activePeriods, setActivePeriods] = useState([]);\n  //const [currentVolts, setCurrentVolts] = useState(0);\n\n  const fs = require('fs');\n  // Function to read the first line of the CSV and return it as an integer\n  function readFirstLine() {\n    fs.readFile('stats.csv', 'utf8', (err, data) => {\n      if (err) {\n        console.error('Error reading the file:', err);\n        return;\n      }\n\n      // Split the content by lines and grab the first line\n      const lines = data.split('\\n');\n      const firstLine = lines[0];\n\n      // Convert the first line to an integer\n      const currentVal = parseInt(firstLine.trim(), 10);\n      return currentVal;\n    });\n  }\n  const currentSum = readFirstLine();\n  const fetchTileHistory = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/tile-history');\n      const data = await response.json();\n      if (data.length > 0) {\n        setTileHistory(data);\n        setActiveTile(data[data.length - 1].tile);\n        processActivePeriods(data);\n      } else {\n        setTileHistory([]);\n        setActiveTile(null);\n      }\n    } catch (error) {\n      console.error('Error fetching tile history:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTileHistory();\n    const interval = setInterval(fetchTileHistory, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  const processActivePeriods = data => {\n    if (data.length === 0) {\n      setActivePeriods([]);\n      return;\n    }\n    let periods = [];\n    let previousTimestamp = new Date(data[0].timestamp);\n    let previousTile = data[0].tile;\n    for (let i = 1; i < data.length; i++) {\n      const currentTimestamp = new Date(data[i].timestamp);\n      const currentTile = data[i].tile;\n      periods.push({\n        tile: previousTile,\n        start: previousTimestamp,\n        end: currentTimestamp\n      });\n      previousTile = currentTile;\n      previousTimestamp = currentTimestamp;\n    }\n    periods.push({\n      tile: previousTile,\n      start: previousTimestamp,\n      end: new Date()\n    });\n    setActivePeriods(periods);\n  };\n  const handleTileClick = async tileNumber => {\n    try {\n      setActiveTile(tileNumber);\n      const response = await fetch('http://localhost:3001/api/log-tile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tile: tileNumber\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to log tile click');\n      }\n      console.log(`Tile ${tileNumber} clicked and logged.`);\n      fetchTileHistory();\n    } catch (error) {\n      console.error('Error clicking tile:', error);\n    }\n  };\n  const chartData = {\n    labels: activePeriods.map(entry => `${entry.start.toLocaleTimeString()} - ${entry.end.toLocaleTimeString()}`),\n    datasets: [{\n      label: `Tile Activation Durations`,\n      data: activePeriods.map(entry => entry.tile),\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.2)',\n      stepped: true\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"Tile Activity Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-10 gap-2\",\n      children: Array.from({\n        length: 100\n      }, (_, i) => i + 1).map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `aspect-square flex items-center justify-center text-sm font-medium border rounded transition-colors duration-300\n              ${activeTile === number ? \"bg-blue-500 text-white\" : \"bg-gray-200 hover:bg-gray-100\"}\n            `,\n        onClick: () => handleTileClick(number),\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-100 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Tile Activation Timeline (Past 4 Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), activePeriods.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Tile Number\"\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No activations in the past 4 hours.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), \",\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-100 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Total Energy Consumption (Past 4 Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-8 bg-gray-200 rounded-full overflow-hidden mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-green-500 transition-all duration-500\",\n          style: {\n            width: readFirstLine() / 10 + `%`\n          } // Replace with your actual percentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), [250, 500, 750].map(milestone => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 bottom-0\",\n          style: {\n            left: `${milestone}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-0 transform -translate-x-1/2 w-1 h-3 bg-gray-600 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 transform -translate-x-1/2 text-sm font-medium text-gray-600\",\n            style: {\n              marginTop: '2px'\n            },\n            children: [milestone, \"V\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, milestone, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-lg font-semibold text-gray-700\",\n        children: [readFirstLine(), \"V stored \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(TileGrid, \"o2vwUsuo/r7RRm/43hnyhY0E83g=\");\n_c = TileGrid;\nexport default TileGrid;\nvar _c;\n$RefreshReg$(_c, \"TileGrid\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","TileGrid","_s","tileHistory","setTileHistory","activeTile","setActiveTile","activePeriods","setActivePeriods","fs","require","readFirstLine","readFile","err","data","console","error","lines","split","firstLine","currentVal","parseInt","trim","currentSum","fetchTileHistory","response","fetch","json","length","tile","processActivePeriods","interval","setInterval","clearInterval","periods","previousTimestamp","Date","timestamp","previousTile","i","currentTimestamp","currentTile","push","start","end","handleTileClick","tileNumber","method","headers","body","JSON","stringify","ok","Error","log","chartData","labels","map","entry","toLocaleTimeString","datasets","label","borderColor","backgroundColor","stepped","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","number","onClick","options","scales","y","beginAtZero","title","display","text","style","width","milestone","left","marginTop","_c","$RefreshReg$"],"sources":["/Users/sanjay/projects/GravityTile/tile-monitor/src/components/TileGrid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst TileGrid = () => {\n  const [tileHistory, setTileHistory] = useState([]);\n  const [activeTile, setActiveTile] = useState(null);\n  const [activePeriods, setActivePeriods] = useState([]);\n  //const [currentVolts, setCurrentVolts] = useState(0);\n\n  const fs = require('fs');\n  // Function to read the first line of the CSV and return it as an integer\n  function readFirstLine() {\n    fs.readFile('stats.csv', 'utf8', (err, data) => {\n      if (err) {\n        console.error('Error reading the file:', err);\n        return;\n      }\n\n      // Split the content by lines and grab the first line\n      const lines = data.split('\\n');\n      const firstLine = lines[0];\n\n      // Convert the first line to an integer\n      const currentVal = parseInt(firstLine.trim(), 10);\n\n      return currentVal;\n    });\n  }\n\n  const currentSum = readFirstLine();\n\n  const fetchTileHistory = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/tile-history');\n      const data = await response.json();\n\n      if (data.length > 0) {\n        setTileHistory(data);\n        setActiveTile(data[data.length - 1].tile);\n        processActivePeriods(data);\n      } else {\n        setTileHistory([]);\n        setActiveTile(null);\n      }\n    } catch (error) {\n      console.error('Error fetching tile history:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTileHistory();\n    const interval = setInterval(fetchTileHistory, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const processActivePeriods = (data) => {\n    if (data.length === 0) {\n      setActivePeriods([]);\n      return;\n    }\n\n    let periods = [];\n    let previousTimestamp = new Date(data[0].timestamp);\n    let previousTile = data[0].tile;\n\n    for (let i = 1; i < data.length; i++) {\n      const currentTimestamp = new Date(data[i].timestamp);\n      const currentTile = data[i].tile;\n\n      periods.push({\n        tile: previousTile,\n        start: previousTimestamp,\n        end: currentTimestamp,\n      });\n\n      previousTile = currentTile;\n      previousTimestamp = currentTimestamp;\n    }\n\n    periods.push({\n      tile: previousTile,\n      start: previousTimestamp,\n      end: new Date(),\n    });\n\n    setActivePeriods(periods);\n  };\n\n  const handleTileClick = async (tileNumber) => {\n    try {\n      setActiveTile(tileNumber);\n\n      const response = await fetch('http://localhost:3001/api/log-tile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ tile: tileNumber }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to log tile click');\n      }\n\n      console.log(`Tile ${tileNumber} clicked and logged.`);\n      fetchTileHistory();\n    } catch (error) {\n      console.error('Error clicking tile:', error);\n    }\n  };\n\n  const chartData = {\n    labels: activePeriods.map(entry => `${entry.start.toLocaleTimeString()} - ${entry.end.toLocaleTimeString()}`),\n    datasets: [\n      {\n        label: `Tile Activation Durations`,\n        data: activePeriods.map(entry => entry.tile),\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0, 0, 255, 0.2)',\n        stepped: true,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\">\n      <h1 className=\"text-2xl font-bold mb-4 text-gray-800\">Tile Activity Monitor</h1>\n\n      <div className=\"grid grid-cols-10 gap-2\">\n        {Array.from({ length: 100 }, (_, i) => i + 1).map(number => (\n          <button\n            key={number}\n            className={`aspect-square flex items-center justify-center text-sm font-medium border rounded transition-colors duration-300\n              ${activeTile === number ? \"bg-blue-500 text-white\" : \"bg-gray-200 hover:bg-gray-100\"}\n            `}\n            onClick={() => handleTileClick(number)}\n          >\n            {number}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"mt-6 p-4 bg-gray-100 rounded\">\n        <h2 className=\"text-lg font-semibold mb-2\">Tile Activation Timeline (Past 4 Hours)</h2>\n        {activePeriods.length > 0 ? (\n          <Line data={chartData} options={{ scales: { y: { beginAtZero: true, title: { display: true, text: \"Tile Number\" } } } }} />\n        ) : (\n          <p className=\"text-gray-500\">No activations in the past 4 hours.</p>\n        )}\n      </div>,\n\n      <div className=\"mt-6 p-4 bg-gray-100 rounded\">\n        <h2 className=\"text-lg font-semibold mb-2\">Total Energy Consumption (Past 4 Hours)</h2>\n        {/* Main bar container */}\n        <div className=\"relative h-8 bg-gray-200 rounded-full overflow-hidden mb-6\">\n          {/* Progress bar */}\n          <div \n            className=\"h-full bg-green-500 transition-all duration-500\"\n            style={{ width: readFirstLine()/10+`%` }}  // Replace with your actual percentage\n          />\n          \n          {/* Milestone markers */}\n          {[250, 500, 750].map(milestone => (\n            <div \n              key={milestone}\n              className=\"absolute top-0 bottom-0\"\n              style={{ left: `${milestone}%` }}\n            >\n              {/* Tick marker */}\n              <div className=\"absolute top-0 transform -translate-x-1/2 w-1 h-3 bg-gray-600 rounded\" />\n              \n              {/* Milestone number with small space below the tick */}\n              <div className=\"absolute top-2 transform -translate-x-1/2 text-sm font-medium text-gray-600\" style={{ marginTop: '2px' }}>\n                {milestone}V\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Current value display */}\n        <div className=\"text-center text-lg font-semibold text-gray-700\">\n          {readFirstLine()}V stored {/* Replace with your actual voltage */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TileGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}