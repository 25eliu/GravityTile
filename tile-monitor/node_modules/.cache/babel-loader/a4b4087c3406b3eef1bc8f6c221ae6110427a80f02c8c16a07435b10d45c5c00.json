{"ast":null,"code":"var _jsxFileName = \"/Users/sanjay/projects/GravityTile/tile-monitor/src/components/TileGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TileGrid = () => {\n  _s();\n  const [tileHistory, setTileHistory] = useState([]);\n  const [activeTile, setActiveTile] = useState(null);\n  const [activePeriods, setActivePeriods] = useState([]);\n  const [currentSum, setCurrentSum] = useState(0);\n  const [alertTimes, setAlertTimes] = useState([]);\n  const [alertHistory, setAlertHistory] = useState([]);\n  const fetchAlertHistory = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/alert-history\");\n      const data = await response.json();\n      setAlertHistory(data.alertHistory);\n    } catch (error) {\n      console.error(\"Error fetching alert history:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchAlertHistory();\n    const interval = setInterval(fetchAlertHistory, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Fetch alert tiles\n  const fetchAlertTiles = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/alert-tiles\");\n      const data = await response.json();\n      setAlertTimes(data.alertTimes.map(alert => parseInt(alert.tile))); // Store tile numbers as integers\n    } catch (error) {\n      console.error(\"Error fetching alert tiles:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchAlertTiles();\n    const interval = setInterval(fetchAlertTiles, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Fetch current sum\n  const fetchCurrentSum = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/current-sum\");\n      const data = await response.json();\n      if (data.currentSum !== undefined) {\n        setCurrentSum(data.currentSum);\n      } else {\n        console.error(\"Invalid response structure:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching current sum:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchCurrentSum();\n    const interval = setInterval(fetchCurrentSum, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Fetch tile history\n  const fetchTileHistory = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/tile-history\");\n      const data = await response.json();\n      if (data.length > 0) {\n        setTileHistory(data);\n        setActiveTile(data[data.length - 1].tile);\n        processActivePeriods(data);\n      } else {\n        setTileHistory([]);\n        setActiveTile(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching tile history:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTileHistory();\n    const interval = setInterval(fetchTileHistory, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Process active periods\n  const processActivePeriods = data => {\n    if (data.length === 0) {\n      setActivePeriods([]);\n      return;\n    }\n    let periods = [];\n    let previousTimestamp = new Date(data[0].timestamp);\n    let previousTile = data[0].tile;\n    for (let i = 1; i < data.length; i++) {\n      const currentTimestamp = new Date(data[i].timestamp);\n      const currentTile = data[i].tile;\n      periods.push({\n        tile: previousTile,\n        start: previousTimestamp,\n        end: currentTimestamp\n      });\n      previousTile = currentTile;\n      previousTimestamp = currentTimestamp;\n    }\n    periods.push({\n      tile: previousTile,\n      start: previousTimestamp,\n      end: new Date()\n    });\n    setActivePeriods(periods);\n  };\n\n  // ✅ Handle tile clicks\n  const handleTileClick = async tileNumber => {\n    try {\n      setActiveTile(tileNumber);\n      const response = await fetch(\"http://localhost:3001/api/log-tile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tile: tileNumber\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to log tile click\");\n      }\n      console.log(`Tile ${tileNumber} clicked and logged.`);\n      fetchTileHistory();\n    } catch (error) {\n      console.error(\"Error clicking tile:\", error);\n    }\n  };\n\n  // ✅ Chart Data\n  const chartData = {\n    labels: activePeriods.map(entry => `${entry.start.toLocaleTimeString()} - ${entry.end.toLocaleTimeString()}`),\n    datasets: [{\n      label: `Tile Activation Durations`,\n      data: activePeriods.map(entry => entry.tile),\n      borderColor: \"blue\",\n      backgroundColor: \"rgba(0, 0, 255, 0.2)\",\n      stepped: true\n    }]\n  };\n\n  // ✅ 3x3 Hexagon Layout\n  const hexagonLayout = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"TileMate Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container mb-12\",\n      children: hexagonLayout.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hex-row flex justify-center\",\n        children: row.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTileClick(number),\n          className: `hex-button ${alertTimes.includes(number) ? \"hex-button-alert\" : activeTile === number ? \"hex-button-active\" : \"\"}`,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2 text-center\",\n        children: \"Tile Activation Timeline (Past 12 Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), activePeriods.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"Tile Number\"\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: \"No activations in the past 12 hours.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2 text-center\",\n        children: \"Total Energy Generated (Past 12 Hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative h-8 bg-gray-200 rounded-full overflow-hidden mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-green-500 transition-all duration-500\",\n          style: {\n            width: `${Math.min(currentSum / 10, 100)}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-lg font-semibold text-gray-700\",\n        children: [currentSum.toFixed(2), \"mV stored\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2 text-center\",\n        children: \"Alert Activation History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), alertHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full text-left border-collapse border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-300 px-4 py-2\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-300 px-4 py-2\",\n              children: \"Tile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: alertHistory.map((alert, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border border-gray-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: alert.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2\",\n              children: alert.tile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 text-center\",\n        children: \"No alerts recorded.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(TileGrid, \"kmWP5Q5CEFoGbxFWpZSRgHrhEhM=\");\n_c = TileGrid;\nexport default TileGrid;\nvar _c;\n$RefreshReg$(_c, \"TileGrid\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","TileGrid","_s","tileHistory","setTileHistory","activeTile","setActiveTile","activePeriods","setActivePeriods","currentSum","setCurrentSum","alertTimes","setAlertTimes","alertHistory","setAlertHistory","fetchAlertHistory","response","fetch","data","json","error","console","interval","setInterval","clearInterval","fetchAlertTiles","map","alert","parseInt","tile","fetchCurrentSum","undefined","fetchTileHistory","length","processActivePeriods","periods","previousTimestamp","Date","timestamp","previousTile","i","currentTimestamp","currentTile","push","start","end","handleTileClick","tileNumber","method","headers","body","JSON","stringify","ok","Error","log","chartData","labels","entry","toLocaleTimeString","datasets","label","borderColor","backgroundColor","stepped","hexagonLayout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","number","onClick","includes","options","scales","y","beginAtZero","title","display","text","style","width","Math","min","toFixed","index","time","_c","$RefreshReg$"],"sources":["/Users/sanjay/projects/GravityTile/tile-monitor/src/components/TileGrid.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\n\nconst TileGrid = () => {\n  const [tileHistory, setTileHistory] = useState([]);\n  const [activeTile, setActiveTile] = useState(null);\n  const [activePeriods, setActivePeriods] = useState([]);\n  const [currentSum, setCurrentSum] = useState(0);\n  const [alertTimes, setAlertTimes] = useState([]);\n  const [alertHistory, setAlertHistory] = useState([]);\n\n  const fetchAlertHistory = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/alert-history\");\n      const data = await response.json();\n      setAlertHistory(data.alertHistory);\n    } catch (error) {\n      console.error(\"Error fetching alert history:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAlertHistory();\n    const interval = setInterval(fetchAlertHistory, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Fetch alert tiles\n  const fetchAlertTiles = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/alert-tiles\");\n      const data = await response.json();\n      setAlertTimes(data.alertTimes.map(alert => parseInt(alert.tile))); // Store tile numbers as integers\n    } catch (error) {\n      console.error(\"Error fetching alert tiles:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAlertTiles();\n    const interval = setInterval(fetchAlertTiles, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Fetch current sum\n  const fetchCurrentSum = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/current-sum\");\n      const data = await response.json();\n      if (data.currentSum !== undefined) {\n        setCurrentSum(data.currentSum);\n      } else {\n        console.error(\"Invalid response structure:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching current sum:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCurrentSum();\n    const interval = setInterval(fetchCurrentSum, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Fetch tile history\n  const fetchTileHistory = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/tile-history\");\n      const data = await response.json();\n\n      if (data.length > 0) {\n        setTileHistory(data);\n        setActiveTile(data[data.length - 1].tile);\n        processActivePeriods(data);\n      } else {\n        setTileHistory([]);\n        setActiveTile(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching tile history:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTileHistory();\n    const interval = setInterval(fetchTileHistory, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ✅ Process active periods\n  const processActivePeriods = (data) => {\n    if (data.length === 0) {\n      setActivePeriods([]);\n      return;\n    }\n\n    let periods = [];\n    let previousTimestamp = new Date(data[0].timestamp);\n    let previousTile = data[0].tile;\n\n    for (let i = 1; i < data.length; i++) {\n      const currentTimestamp = new Date(data[i].timestamp);\n      const currentTile = data[i].tile;\n\n      periods.push({\n        tile: previousTile,\n        start: previousTimestamp,\n        end: currentTimestamp,\n      });\n\n      previousTile = currentTile;\n      previousTimestamp = currentTimestamp;\n    }\n\n    periods.push({\n      tile: previousTile,\n      start: previousTimestamp,\n      end: new Date(),\n    });\n\n    setActivePeriods(periods);\n  };\n\n  // ✅ Handle tile clicks\n  const handleTileClick = async (tileNumber) => {\n    try {\n      setActiveTile(tileNumber);\n      const response = await fetch(\"http://localhost:3001/api/log-tile\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ tile: tileNumber }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to log tile click\");\n      }\n\n      console.log(`Tile ${tileNumber} clicked and logged.`);\n      fetchTileHistory();\n    } catch (error) {\n      console.error(\"Error clicking tile:\", error);\n    }\n  };\n\n  // ✅ Chart Data\n  const chartData = {\n    labels: activePeriods.map(\n      (entry) =>\n        `${entry.start.toLocaleTimeString()} - ${entry.end.toLocaleTimeString()}`\n    ),\n    datasets: [\n      {\n        label: `Tile Activation Durations`,\n        data: activePeriods.map((entry) => entry.tile),\n        borderColor: \"blue\",\n        backgroundColor: \"rgba(0, 0, 255, 0.2)\",\n        stepped: true,\n      },\n    ],\n  };\n\n  // ✅ 3x3 Hexagon Layout\n  const hexagonLayout = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9],\n  ];\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-8\">\n      {/* ✅ Title */}\n      <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">TileMate Display</h1>\n\n      {/* ✅ Hexagonal Grid */}\n      <div className=\"grid-container mb-12\">\n        {hexagonLayout.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"hex-row flex justify-center\">\n            {row.map((number) => (\n              <button\n                key={number}\n                onClick={() => handleTileClick(number)}\n                className={`hex-button ${\n                  alertTimes.includes(number)\n                    ? \"hex-button-alert\"\n                    : activeTile === number\n                    ? \"hex-button-active\"\n                    : \"\"\n                }`}\n              >\n                {number}\n              </button>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* ✅ Timeline Chart */}\n      <div className=\"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg\">\n        <h2 className=\"text-lg font-semibold mb-2 text-center\">\n          Tile Activation Timeline (Past 12 Hours)\n        </h2>\n        {activePeriods.length > 0 ? (\n          <Line\n            data={chartData}\n            options={{\n              scales: {\n                y: { beginAtZero: true, title: { display: true, text: \"Tile Number\" } },\n              },\n            }}\n          />\n        ) : (\n          <p className=\"text-gray-500 text-center\">\n            No activations in the past 12 hours.\n          </p>\n        )}\n      </div>\n\n      {/* ✅ Energy Bar */}\n      <div className=\"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg mt-6\">\n        <h2 className=\"text-lg font-semibold mb-2 text-center\">\n          Total Energy Generated (Past 12 Hours)\n        </h2>\n        <div className=\"relative h-8 bg-gray-200 rounded-full overflow-hidden mb-6\">\n          <div\n            className=\"h-full bg-green-500 transition-all duration-500\"\n            style={{ width: `${Math.min(currentSum / 10, 100)}%` }}\n          />\n        </div>\n\n        <div className=\"text-center text-lg font-semibold text-gray-700\">\n          {currentSum.toFixed(2)}mV stored\n        </div>\n      </div>\n            {/* ✅ Alert Table */}\n            <div className=\"w-full max-w-4xl bg-white p-6 rounded-lg shadow-lg\">\n        <h2 className=\"text-lg font-semibold mb-2 text-center\">\n          Alert Activation History\n        </h2>\n        {alertHistory.length > 0 ? (\n          <table className=\"w-full text-left border-collapse border border-gray-300\">\n            <thead>\n              <tr className=\"bg-gray-200\">\n                <th className=\"border border-gray-300 px-4 py-2\">Time</th>\n                <th className=\"border border-gray-300 px-4 py-2\">Tile</th>\n              </tr>\n            </thead>\n            <tbody>\n              {alertHistory.map((alert, index) => (\n                <tr key={index} className=\"border border-gray-300\">\n                  <td className=\"px-4 py-2\">{alert.time}</td>\n                  <td className=\"px-4 py-2\">{alert.tile}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p className=\"text-gray-500 text-center\">No alerts recorded.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TileGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}